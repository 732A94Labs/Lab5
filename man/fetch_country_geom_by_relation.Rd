% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_client.R
\name{fetch_country_geom_by_relation}
\alias{fetch_country_geom_by_relation}
\title{Fetch a country's geometry by OSM relation id (via Nominatim)}
\usage{
fetch_country_geom_by_relation(rel_id)
}
\arguments{
\item{rel_id}{Integer or character. An OSM relation id, **without** the
`R` prefix (the function prepends it internally for the `osm_ids` query).}
}
\value{
An `sf` object with one feature (the requested relation) containing:
- a geometry column (usually `POLYGON`/`MULTIPOLYGON`), and
- a property column `osm_id` equal to `rel_id`.
}
\description{
Looks up an OSM relation id in Nominatim (`/lookup`) and returns the
polygon geometry as an `sf` object. The function requests GeoJSON, wraps
it into a FeatureCollection, writes it to a temporary file, then reads it
through **sf** and applies `st_make_valid()` for robustness.
}
\details{
- `rel_id` should be the numeric OSM **relation** id as found in the country
  list (e.g., from [fetch_countries()]).
- The request is made with a descriptive `User-Agent`.
- The function checks `resp_status(resp) == 200` and stops otherwise.
- Because Nominatim returns a compact `geojson` field (type + coordinates),
  we construct a minimal FeatureCollection to pass to `sf::st_read()`.
}
\examples{
\dontrun{
# Germany relation id (example; subject to change in OSM):
g <- fetch_country_geom_by_relation(51477)
plot(sf::st_geometry(g))
}

}
\seealso{
[fetch_countries()]
}
